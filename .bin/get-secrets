#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const ssh = require('ssh2');
const userhome = require('userhome');
const bach = require('bach');
const chalk = require('chalk');
const mkdirp = require('mkdirp').sync;

const LOCAL_SECRETS = './config/secrets';
const REMOTE_SECRETS = '/mnt/secrets';
const REMOTE_SERVER = 'nest.bocoup.com';
const USER = process.env.USER;
const SSH_KEY = fs.readFileSync(userhome('.ssh/id_rsa'));

console.log(chalk.green('getting secrets'));

// todo: extract this into an npm module, sftp-get
(function getSecrets(opts) {

  mkdirp(LOCAL_SECRETS);

  console.log('connecting to '+opts.username+'@'+REMOTE_SERVER+'...');

  var remote = new ssh();

  remote.on('error', function (err) {
    fail(err);
  });

  remote.connect(opts);

  remote.on('ready', function () {
    remote.sftp(function (err, sftp) {
      if (err) {
        fail(err);
      }
      sftp.readdir(REMOTE_SECRETS, function(readdirErr, list) {
        if (readdirErr) {
          fail(readdirErr, 'unable to list files on remote machine');
        }
        var resolveStreams = bach.parallel(list.map(function (entry) {
          return function() {
            var file = entry.filename;
            var remotePath = path.join(REMOTE_SECRETS, file);
            var localPath = path.join(LOCAL_SECRETS, file);
            var opts = {};
            if (path.extname(file) == '.pem') {
              opts.mode = 0600;
            }
            console.log('downloading', file, 'to', localPath);
            return sftp.createReadStream(remotePath).
              pipe(fs.createWriteStream(path.resolve(localPath), opts));
          };
        }));
        resolveStreams(function (streamErr) {
          if (streamErr) {
            fail(streamErr);
          }
          console.log(chalk.green('downloads complete.'));
          remote.end();
        });
      });
    });
  });
}({
  host: REMOTE_SERVER,
  username: process.argv[2]||USER,
  privateKey: SSH_KEY
}));

function fail(err, msg) {
  if (!msg) {
    msg = 'downloading secrets failed';
  }
  var faqLink =
    'https://github.com/bocoup/nest#what-do-i-do-if-running-get-secrets-fails';
  console.log(chalk.red(msg));
  console.log('\nread the faq for help:');
  console.log(chalk.green(faqLink));
  console.log(
    '\nif you have dploy set up and this still doesn\'t work, try'
  );
  console.log(
    chalk.green('scp -r '+REMOTE_SERVER+':/mnt/secrets config')
  );
  if (process.env.DEBUG) {
    throw err;
  }
  process.exit(1);
}
